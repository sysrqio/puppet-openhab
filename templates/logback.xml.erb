<configuration scan="true">

	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] [%-30.30logger{36}] - %msg%n</pattern>
		</encoder>
	</appender>

	<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${openhab.logdir:-logs}/openhab.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- weekly rollover and archiving -->
			<fileNamePattern>${openhab.logdir:-logs}/openhab-%d{<%= @logging['openhab']['rollover_pattern'] -%>}.log.zip</fileNamePattern>
			<!-- maximum number of archive files to keep -->
			<maxHistory><%= @logging['openhab']['history'] -%></maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] [%-30.30logger{36}] - %msg%n</pattern>
		</encoder>
	</appender>

	<appender name="EVENTFILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${openhab.logdir:-logs}/events.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- weekly rollover and archiving -->
			<fileNamePattern>${openhab.logdir:-logs}/events-%d{<%= @logging['events']['rollover_pattern'] -%>}.log.zip</fileNamePattern>
			<!-- maximum number of archive files to keep -->
			<maxHistory><%= @logging['events']['history'] -%></maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss} - %msg%n</pattern>
		</encoder>
	</appender>

	<% if @logging['syslog']['enabled'] -%>
	<appender name="SYSLOG" class="ch.qos.logback.classic.net.SyslogAppender">
		<syslogHost><%= @logging['syslog']['host'] -%></syslogHost>
		<facility><%= @logging['syslog']['facility'] -%></facility>
		<suffixPattern><%= @logging['syslog']['logpattern'] -%></suffixPattern>
	</appender>
	<% end -%>


	<logger name="runtime.busevents" level="INFO" additivity="false">
		<appender-ref ref="EVENTFILE" />
		<appender-ref ref="STDOUT" />
	</logger>

	<logger name="org.openhab" level="INFO"/>

	<!-- this class gives an irrelevant warning at startup -->
	<logger name="org.atmosphere.cpr.AtmosphereFramework" level="ERROR" />

	<!-- temporary workaround for https://github.com/openhab/jmdns/issues/12 -->
	<logger name="javax.jmdns" level="OFF"/>

	<!-- temporary workaround for https://bugs.eclipse.org/bugs/show_bug.cgi?id=402750 -->
	<logger name="OSGi" level="OFF" />
	
	<!-- temporary workaround to circumvent error messages with any obvious effect -->
	<logger name="org.atmosphere.cpr.AtmosphereFramework" level="OFF" />
	<logger name="org.atmosphere.cpr.DefaultAnnotationProcessor" level="OFF" />
	
	<% if !@logging.select{|k,h| h['enabled'] == true && !h['levels'].nil? && h["levels"].include?('WARN') }.empty? -%>
	<root level="WARN">
		<% @logging.select{|k,h| h['enabled'] == true && !h['levels'].nil? && h["levels"].include?('WARN') }.map { |k,v| v}.each do |warnlog| -%>
		<appender-ref ref="<%= warnlog['logname'] -%>" />
		<% end -%>
	</root>
	<% end -%>

	<% if !@logging.select{|k,h| h['enabled'] == true && !h['levels'].nil? && h["levels"].include?('INFO') }.empty? -%>
	<root level="INFO">
		<% @logging.select{|k,h| h['enabled'] == true && !h['levels'].nil? && h["levels"].include?('INFO') }.map { |k,v| v}.each do |infolog| -%>
		<appender-ref ref="<%= infolog['logname'] -%>" />
		<% end -%>
	</root>
	<% end -%>

</configuration>
